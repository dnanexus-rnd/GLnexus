language: cpp
sudo: yes
dist: trusty

compiler:
  - gcc

# Get requisite Ubuntu packages
addons:
  apt:
    packages:
      - libjemalloc-dev
      - libsnappy-dev
      - libc6-dbg
      - gdb
      - cmake

before_install:
  - ulimit -c unlimited -S # enable core dump
  - .travis/before_install.sh

script:
  # Report version of CMake and GCC
  - cmake --version
  - gcc --version
  # Build and run unit tests
  - cmake -Dtest=ON -DCMAKE_BUILD_TYPE=Coverage . && make -j $(nproc) && ./unit_tests
  # Build again in Release mode. This is not redundant because some warnings
  # we've set to errors are detected only when the compiler is optimizing.
  # http://stackoverflow.com/q/11061970
  - cmake -Dtest=ON -DCMAKE_BUILD_TYPE=Release && make -j $(nproc)
  # Run tests under valgrind (errors don't fail the build for now)
  - (.travis/install_valgrind.sh > /tmp/install_valgrind.log 2>&1) || cat /tmp/install_valgrind.log
  - valgrind --leak-check=full --error-exitcode=1 ./unit_tests || true

# Encrypted Github credential (using yifei's account)
env:
  global:
    - secure: "i/0Zm5ZtBe8oHaRHGBmlXzcaS61VoovEz758LY4GFKl0PncwFfFWAN8Yt2iWBZPLu5hHXudHKNaJc5ORqoqggLYzgDue++6mqL5lQfJbl9Luh/itoi20M9pt+I2dMW+9qLipROH3tTxGSiIVxacRcAbkxMdHz71iiHZ0PViLQ0UyE12ugSqNn81VYUDzgPISc0vs+8I76FGXB7i4Ox1HO2d8OLJwfnzriBXuQyHbLJT4fA1yz53sT+RNc5iTR4/xGA5qfnuGgrjcLZYsjh8bSzjvsYeA3RddIcsjmOhCw/ZvEMIvvqi9oAV//EiO95c8l+GG3U0k/78u7YafROnr901aDXSkS+1KitOT3n9KoQkuDZMpqUGCX30tSBefpnpq8EdxibaUfauhrkf0mNbZepZU18vIGB3h49lGGkBkJ1tR5fw/htnm7hUywXVRkcur/DYqPtsc3aM0HViEGsMplTIEsCYJE/O39Lde1ksJrYQCYp4AAlgmSsrKo0WLydc8gnbfYhxws+NzI2VH5mkr7BCEiK6fG2CIOT0xFJqCQbkhFOKVKyArUBou8bKTAbB7CFZNeMcbUEuVWY5NJ0Gvn4uiYOa47e/P+i8FO/LV+Rcpx8Jabn0E5bL1gRHuMqo7RfdF9B7ape6w2+Qyn2MFkplSfjadVP8mFefMIckYjU4="

# After success, report test coverage and update doxygen (master branch)
after_success:
  - coveralls --include src --include include --gcov-options '\-lp'
  - if [ "$TRAVIS_BRANCH" == "master" ]; then chmod u+x .travis/after_success.sh; .travis/after_success.sh; fi

# After a failure, print the backtrace from any core dump
after_failure:
  - for i in $(find ./ -maxdepth 1 -name 'core*' -print); do gdb $(pwd)/test core* -ex "thread apply all bt" -ex "set pagination 0" -batch; done
